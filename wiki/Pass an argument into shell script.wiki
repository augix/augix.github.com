{{{class="brush: bash"
#!/bin/sh
input=$1
output=$2
}}}

{{{
$*
	Returns a single string (``$1, $2 ... $n'') comprising all of the
	positional parameters separated by the internal field separator character
	(defined by the IFS environment variable).

$@
	Returns a sequence of strings (``$1'', ``$2'', ... ``$n'') wherein each
	positional parameter remains separate from the others.

$1, $2 ... $n
	Refers to a numbered argument to the script, where n is the position of the
	argument on the command line. In the Korn shell you can refer directly to
	arguments where n is greater than 9 using braces. For example, to refer to
	the 57th positional parameter, use the notation ${57}. In the other shells,
	to refer to parameters with numbers greater than 9, use the shift command;
	this shifts the parameter list to the left. $1 is lost, while $2 becomes
	$1, $3 becomes $2, and so on. The inaccessible tenth parameter becomes $9
	and can then be referred to.

$0
	Refers to the name of the script itself.

$#
	Refers to the number of arguments specified on a command line.
}}}


[http://osr507doc.sco.com/en/OSUserG/_Passing_to_shell_script.html Passing arguments to a shell script]
